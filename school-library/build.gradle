plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

group = "$applicationGroup"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "$javaVersion"

bootJar {
    enabled = true
}

dependencies {

    implementation project(":common-lib")

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //Eureka Client
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Client side load balancer
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    //H2
    //runtimeOnly 'com.h2database:h2'

    //Postgres
    runtimeOnly 'org.postgresql:postgresql'

    // Flyway database migration
    implementation 'org.flywaydb:flyway-core'

    //XML
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'javax.xml.bind:jaxb-api'

    // Resilience4j circuit breaker
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    // Actuator for health check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Spring cloud
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

/*
tasks.named('test') {
    useJUnitPlatform()
}
*/
